class C<T : Any?> {
  constructor() /* primary */ {
    super/*Any*/()
        /* InstanceInitializerCall */

  }

}

object Delegate {
  private constructor() /* primary */ {
    super/*Any*/()
        /* InstanceInitializerCall */

  }

  operator fun getValue(thisRef: Any?, kProp: Any?): Int {
    return 42
  }

  operator fun setValue(thisRef: Any?, kProp: Any?, newValue: Int) {
  }

}

var <T : Any?> C<T>.genericDelegatedProperty: Int /* by */ 
  field = Delegate
  get(): Int {
    return #genericDelegatedProperty$delegate.getValue(thisRef = <this>, kProp = ::genericDelegatedProperty)
  }
  set(<set-?>: Int) {
    return #genericDelegatedProperty$delegate.setValue(thisRef = <this>, kProp = ::genericDelegatedProperty, newValue = <set-?>)
  }

