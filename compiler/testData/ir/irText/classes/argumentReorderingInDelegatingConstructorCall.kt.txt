open class Base {
  constructor(x: Int, y: Int) /* primary */ {
    super/*Any*/()
        /* InstanceInitializerCall */

  }

  val x: Int
    field = x
    get

  val y: Int
    field = y
    get




}

class Test1 : Base {
  constructor(xx: Int, yy: Int) /* primary */ {
    { // BLOCK
      super/*Base*/(x = xx, y = yy)
    }
        /* InstanceInitializerCall */

  }




}

class Test2 : Base {
  constructor(xx: Int, yy: Int) {
    { // BLOCK
      super/*Base*/(x = xx, y = yy)
    }
        /* InstanceInitializerCall */

  }

  constructor(xxx: Int, yyy: Int, a: Any) {
    { // BLOCK
      this/*Test2*/(xx = xxx, yy = yyy)
    }
  }




}

