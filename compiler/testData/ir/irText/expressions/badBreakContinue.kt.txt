fun test1() {
  error("") /* ERROR EXPRESSION */
  error("") /* ERROR EXPRESSION */
}

fun test2() {
  while (true) { // BLOCK
    error("") /* ERROR EXPRESSION */
    error("") /* ERROR EXPRESSION */
  }
}

fun test3() {
  while (true) { // BLOCK
    val lambda: Function0<Nothing> = local fun <anonymous>(): Nothing {
      error("") /* ERROR EXPRESSION */
      error("") /* ERROR EXPRESSION */
    }

  }
}

fun test4() {
  while (error("") /* ERROR EXPRESSION */) { // BLOCK
  }
  while (error("") /* ERROR EXPRESSION */) { // BLOCK
  }
}

